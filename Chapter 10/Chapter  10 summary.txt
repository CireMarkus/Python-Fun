Chapter 10 discussed more in depth the concepts of object oriented programming. The chapter initially explains how to define a class in python and explains that all functions must be passed the self keyword, this keyword is the object itself being passed to the function and is used to access the member functions of the class because all of the data members created in python are virtual. Also, all of the data members of a class are declared public unless otherwise stated. Through the creation of a class one can create an object which is an instance of the class and is essentially the utilization of the class. This object will become a data holder that will allow the programmer to store, access, and manipulate data within the constraints of the class. The dot (.) operator allows the programmer to access the member functions of the object. When working with classes one must always take into account the scope of the variables that they are working with. The scope is the ability to access data with in a program, the scope of the usually goes from the inner most to the outermost. So, variables that are inside a function cannot be accessed my variables that are out side the function and vice-versa unless explicitly stated. A class can have the objects of another class as its member variable this is essentially nesting, and also allows code that you may have already written to be reused. This chapter also discusses the constructor and destructor of a class. The constructor is called every time a a class is in instantiated, this is usually a default constructor which is a constructor that does not take any arguments. The constructor is implemented using the __init__() function inside the class. A default constructor can be used to fill an object with holder values before it is populated by the user. The other type of constructor is a parameterized constructor this constructor accepts arguments that are then assigned to the data members of the class. This alls the programmer to initialize a object when it is created. For each of these constructors self is always passed as a value to the function to have access to the data members. The destructor is used to release memory that the class is using, this is always called same as the constructor of a class. The programmer may add some clean up here that saves before the class is destroyed.